    showQuestionsFunction(questionCount);
        QuestionCounterFunction(questionNumber);
        questionTotalCount.innerHTML = `${questionNumber}/${questionsArray.length}`;
        optionSelected[0].checked = false;
        optionSelected[1].checked = false;
        optionSelected[2].checked = false;
        optionSelected[3].checked = false;
        optionAsked.innerHTML = `${questions[questionCount].question}`;
        optionA.innerHTML = `${questions[questionCount].optionA}`;
        optionB.innerHTML = `${questions[questionCount].optionB}`;
        optionC.innerHTML = `${questions[questionCount].optionC}`;
        optionD.innerHTML = `${questions[questionCount].optionD}`;
        submitAnswerBtn.style.display = "block";
    } else {
        quizSection.style.display = "none";
        resultPromptPanel.style.display = "block";

        clearInterval(counterBar);


        //calculate user score
        userScore = userPoints / questions.length;
        userScore = userScore.toFixed(2);

        //calculate user rank
        if (userScore >= 0.90) {
            userRank = "A";
        } else if (userScore >= 0.80) {
            userRank = "B";
        } else if (userScore >= 0.70) {
            userRank = "C";
        } else if (userScore >= 0.60) {
            userRank = "D";
        } else {
            userRank = "E";
        }

        //calculate user rank time
        userRankTime = calculateTime(userTimeResults);

        //calculate user rank points
        userRankPoints = userPoints;

        //calculate user rank name
        userRankName = userPlayer;

        //display user rank
        rankValue.innerHTML = `${userRank}`;
        rankTime.innerHTML = `${userRankTime}`;
        rankPoints.innerHTML = `${userRankPoints}`;
        rankName.innerHTML = `${userRankName}`;

        //display user score
        resultPromptPanel.querySelector(".scoreValue").innerHTML = `${userScore}`;

        //display user rank
        resultPromptPanel.querySelector(".rankValue").innerHTML = `${userRank}`;

        //display user rank time
        resultPromptPanel.querySelector(".rankTime").innerHTML = `${userRankTime}`;

        //display user rank points
        resultPromptPanel.querySelector(".rankPoints").innerHTML = `${userRankPoints}`;

        //display user rank name
        resultPromptPanel.querySelector(".rankName").innerHTML = `${userRankName}`;

    }


    
//// Variables
//const quizContainer = document.getElementById('quiz');
//const resultsContainer = document.getElementById('results');
//const submitButton = document.getElementById('submit');


//// Display quiz right away
//buildQuiz();


//// When user clicks submit, show results
//submitButton.addEventListener('click', showResults);


//// Build the quiz
//function buildQuiz() {

//    // variable to store the HTML output
//    const output = [];

//    // for each question...
//    questionsArray.forEach(
//        (currentQuestion, questionNumber) => {

//            // variable to store the list of answer options
//            const answers = [];

//            // for each available answer...
//            for (letter in currentQuestion.options) {

//                // ...add an HTML radio button
//                answers.push(
//                    `<label>
//                <input type="radio" name="question${questionNumber}" value="${letter}">
//                ${letter} :
//                ${currentQuestion.options[letter]}
//            </label>`
//                );
//            }

//            // add this question and its answers to the output
//            output.push(
//                `<div class="question"> ${currentQuestion.question} </div>
//            <div class="answers"> ${answers.join('')} </div>`
//            );
//        }
//    );

//    // finally combine our output list into one string of HTML and put it on the page
//    quizContainer.innerHTML = output.join('');
//}


//// Show results
//function showResults() {

//    // gather answer containers from our quiz
//    const answerContainers = quizContainer.querySelectorAll('.answers');

//    // keep track of user's answers
//    let numCorrect = 0;

//    // for each question...
//    questionsArray.forEach((currentQuestion, questionNumber) => {

//        // find selected answer
//        const answerContainer = answerContainers[questionNumber];
//        const selector = `input[name=question${questionNumber}]:checked`;
//        const userAnswer = (answerContainer.querySelector(selector) || {}).value;

//        // if answer is correct
//        if (userAnswer === currentQuestion.answer) {
//            // add to the number of correct answers
//            numCorrect++;

//            // color the answers green
//            answerContainers[questionNumber].style.color = 'lightgreen';
//        } else {
//            // if answer is wrong or blank
//            // color the answers red
//            answerContainers[questionNumber].style.color = 'red';
//        }
//    });

//    // show number of correct answers out of total
//    resultsContainer.innerHTML = `${numCorrect} out of ${questionsArray.length}`;
//}


//// Timer
//function startTimer(duration, display) {
//    var timer = duration, minutes, seconds, milliseconds;
//    setInterval(function () {
//        minutes = parseInt(timer / 60, 10)
//        seconds = parseInt(timer % 60, 10)
//        milliseconds = parseInt((timer * 100) % 100, 10);

//        minutes = minutes < 10 ? "0" + minutes : minutes;
//        seconds = seconds < 10 ? "0" + seconds : seconds;
//        milliseconds = milliseconds < 10 ? "0" + milliseconds : milliseconds;

//        display.textContent = minutes + ":" + seconds + ":" + milliseconds;

//        if (--timer < 0) {
//            timer = duration;
//        }
//    }, 10);
//}


//window.onload = function () {
//    var fiveMinutes = 60 * 5,
//        display = document.querySelector('#time');
//    startTimer(fiveMinutes, display);
//}




// var allOptions = optionAsked.children.length;
// var correctAnswers = questionsArray[questionCount].answer;
// for (i = 0; i < allOptions; i++) {
//   if (optionAsked.children[i].textContent == correctAnswers) {
//     optionAsked.children[i].setAttribute("class", "option correct");
//     optionAsked.children[i].insertAdjacentHTML("beforeend", tickIconTag);
//     console.log("Time Off: Auto selected correct answer.");
//   }
// }
// for (i = 0; i < allOptions; i++) {
//   optionAsked.children[i].classList.add("disabled"); //once user select an option then disabled all options
// }
// nextQuestionBtn.classList.add("show"); //show the next button if user selected any option
//     }
//   }
// }
//       timerCountdown.textContent = `${startMinutes} : ${startSeconds} : ${startMilliseconds}`;
//     }, 10);
//   }
// }


//function questionsNumbers(index) {
//  const questionAsked = document.querySelector(".questionAsked");
//  const que_tag = `<span>${questionsArray[index].numb}. ${questionsArray[index].question}</span>`;
//  const option_tag = `<div class="option"><span>${questionsArray[index].options[0]}</span></div>
//  <div class="option"><span>${questionsArray[index].options[1]}</span></div>
//  <div class="option"><span>${questionsArray[index].options[2]}</span></div>
//  <div class="option"><span>${questionsArray[index].options[3]}</span></div>`;
//  questionAsked.innerHTML = que_tag;
//  optionAsked.innerHTML = option_tag;
//  const option = optionAsked.querySelectorAll(".option");
//  for (i = 0; i < option.length; i++) {
//    option[i].setAttribute("onclick", "optionSelected(this)");
//  }
//  questionCounterTop.textContent = `${index + 1}`;
//  questionCounterBottom.textContent = `${questionsArray.length}`;
//}


//function optionSelected(answer) {
//  const option = answer.children[0].textContent;
//  const correctAnswers = questionsArray[questionCount].answer;
//  if (option == correctAnswers) {
//    userScore++;
//    answer.classList.add("correct");
//    answer.insertAdjacentHTML("beforeend", tickIconTag);
//    console.log("Correct ANswer");
//    console.log(userScore);
//    console.log(questionCount);
//    console.log(questionsArray.length);
//    console.log(questionsArray[questionCount].answer);
//    console.log(questionsArray[questionCount].question);
//    console.log(questionsArray[questionCount].options);
//    console.log(questionsArray[questionCount].numb);
//    console.log(questionsArray[questionCount].category);
//    console.log(questionsArray[questionCount].difficulty);
//    console.log(questionsArray[questionCount].type);
//    console.log(questionsArray[questionCount].correct_answer);
//    console.log(questionsArray[questionCount].incorrect_answers);
//    console.log(`Your Correct Answer is ${option} = ${userScore}`);
//  } else {
//    answer.classList.add("wrong");
//    answer.insertAdjacentHTML("beforeend", crossIconTag);
//    console.log("Wrong ANswer");
//    console.log(userScore);
//    console.log(questionCount);
//    console.log(questionsArray.length);
//    console.log(questionsArray[questionCount].answer);
//    console.log(questionsArray[questionCount].question);
//    console.log(questionsArray[questionCount].options);
//    console.log(questionsArray[questionCount].numb);
//    console.log(questionsArray[questionCount].category);
//    console.log(questionsArray[questionCount].difficulty);
//    console.log(questionsArray[questionCount].type);
//    console.log(questionsArray[questionCount].correct_answer);
//    console.log(questionsArray[questionCount].incorrect_answers);
//    console.log(`Your Correct Answer is ${option} = ${userScore}`);
//  }
//  for (i = 0; i < allOptions; i++) {
//    optionAsked.children[i].classList.add("disabled"); //once user select an option then disabled all options
//  }
//  nextQuestionBtn.classList.add("show");
//}

  // const userAns = answer.textContent;

  // const correctAns = questionsArray[questionCounter].answer;

  // const allOptions = optionAsked.children.length;

  // if (userAns == correctAns) {
  //   userScore += 1;
  //   answer.classList.add("correct");
  //   answer.insertAdjacentHTML("beforeend", tickIconTag);
  //   console.log("Correct Answer");
  //   console.log(`Your correct answers = ${userScore}`);
  // } else {
  //   answer.classList.add("incorrect");
  //   answer.insertAdjacentHTML("beforeend", crossIconTag);
  //   console.log("Wrong Answer");

  //   for (i = 0; i < allOptions; i++) {
  //     if (optionAsked.children[i].textContent == correctAns) {
  //       optionAsked.children[i].setAttribute("class", "option correct");
  //       optionAsked.children[i].insertAdjacentHTML("beforeend", tickIconTag);
  //       console.log("Auto selected correct answer.");
  //     }
  //   }
  // }
  // for (i = 0; i < allOptions; i++) {
  //   optionAsked.children[i].classList.add("disabled");
  // }
  // nextQuestionBtn.classList.add("show");


//function showResult() {

//  introPromptPanel.classList.remove("activeInfo");
//  quizPromptPanel.classList.remove("activeQuiz");
//  resultPromptPanel.classList.add("activeResult");
//  const scoreText = resultPromptPanel.querySelector(".resultScore");
//  if (userScore > 3) {
//    const scoreTag = `<span>and congrats! , You got <p>${userScore}</p> out of <p>${questionsArray.length}</p></span>`;
//    scoreText.innerHTML = scoreTag;
//  } else if (userScore > 1) {
//    const scoreTag = `<span>and nice , You got <p>${userScore}</p> out of <p>${questionsArray.length}</p></span>`;
//    scoreText.innerHTML = scoreTag;
//  } else {
//    const scoreTag = `<span>and sorry , You got only <p>${userScore}</p> out of <p>${questionsArray.length}</p></span>`;
//    scoreText.innerHTML = scoreTag;
//  }
//}




// let userPlayer = "";

// let userTimeResults = [];
 //store user score
// let holdUserPoints = 0;
// let pointValue = 0;
// let userRank = `${rankValue}`;
// let userRankTime = "00:00:00";
// let userRankPoints = 0;
// let userRankName = "";


//   // start quiz
// function startQuiz() {
//   startQuizSection.style.display = "none"; //hide startQuizSection element
//   quizSection.style.display = "block"; //show quizSection element
//   nextQuestion(); //calling nextQuestion function
// }

//   var questionAsked = document.querySelector(".questionAsked");

//   //creating a new span and div tag for question and option and passing the value using array index
//   var questionNewTag = `<span>${questions[index].numberArray}. ${questions[index].question}</span>`;
//   var optionNewTag =
//     '<div class="option"><span>' + questions[index].options[0] + '</span></div>'
//     + '<div class="option"><span>' + questions[index].options[1] + '</span></div>'
//     + '<div class="option"><span>' + questions[index].options[2] + '</span></div>'
//     + '<div class="option"><span>' + questions[index].options[3] + '</span></div>';
//   questionAsked.innerHTML = questionNewTag; //adding new span tag inside questionNewTag
//   optionAsked.innerHTML = optionNewTag; //adding new div tag inside optionNewTag

//   var option = optionAsked.querySelectorAll(".option"); //selecting all option tags

//   // set onclick attribute to all available options
//   for (i = 0; i < option.length; i++) {
//     option[i].setAttribute("onclick", "optionSelected(this)");
//   }
// }

// creating the new div tags which for icons
// var tickIconTag = '<div class="icon tick"><i class="fas fa-check"></i></div>';
// var crossIconTag = '<div class="icon cross"><i class="fas fa-times"></i></div>';

//if user clicked on option
// function optionSelected(answer) {
//   clearInterval(counterBar); //clear counterBar
//   clearInterval(counterBarLine); //clear counterBarLine
//   var userAnswers = answer.textContent; //getting user selected option
//   var correctAnswers = questions[questionCount].answer; //getting correct answer from array
//   var allOptions = optionAsked.children.length; //getting all option items

//   if (userAnswers == correctAnswers) { //if user selected option is equal to array's correct answer
//     userScore += 1; //upgrading score value with 1
//     answer.classList.add("correct"); //adding green color to correct selected option
//     answer.insertAdjacentHTML("beforeend", tickIconTag); //adding tick icon to correct selected option
//     console.log("Correct Answer");
//     console.log(`Your correct answers = ${userScore}`);
//   } else {
//     answer.classList.add("incorrect"); //adding red color to correct selected option
//     answer.insertAdjacentHTML("beforeend", crossIconTag); //adding cross icon to correct selected option
//     console.log("Wrong Answer");

//     for (i = 0; i < allOptions; i++) {
//       if (optionAsked.children[i].textContent == correctAnswers) { //if there is an option which is matched to an array answer
//         optionAsked.children[i].setAttribute("class", "option correct"); //adding green color to matched option
//         optionAsked.children[i].insertAdjacentHTML("beforeend", tickIconTag); //adding tick icon to matched option
//         console.log("Auto selected correct answer.");
//       }
//     }
//   }
//   for (i = 0; i < allOptions; i++) {
//     optionAsked.children[i].classList.add("disabled"); //once user select an option then disabled all options
//   }
//   nextQuestionBtn.classList.add("show"); //show the next button if user selected any option

// }



//   function showResult() {


//     //show result section
//     introPromptPanel.classList.remove("introInfo"); //hide info box
//     quizPromptPanel.classList.remove("infoQuiz"); //hide quiz box
//     resultPromptPanel.classList.add("infoResult"); //show result box
//     resultSection.style.display = "block";
//     var scoreText = resultPromptPanel.querySelector(".resultScore");
//     if (userScore > 3) { // if user scored more than 3
//       //creating a new span tag and passing the user score number and total question number
//       var scoreTag = `<span>and congrats! , You got <p>${userScore}</p> out of <p>${questions.length}</p></span>`;
//       scoreText.innerHTML = scoreTag;  //adding new span tag inside resultScore
//     }
//     else if (userScore > 1) { // if user scored more than 1
//       var scoreTag = `<span>and nice , You got <p>${userScore}</p> out of <p>${questions.length}</p></span>`;
//       scoreText.innerHTML = scoreTag;
//     }
//     else { // if user scored less than 1
//       var scoreTag = `<span>and sorry , You got only <p>${userScore}</p> out of <p>${questions.length}</p></span>`;
//       scoreText.innerHTML = scoreTag;
//     }
//   }

//   function startTimer(time) {
//     counterBar = setInterval(timerContainer, 1000);
//     function timerContainer() {
//       timeCount.textContent = time; //changing the value of timeCount with time value
//       time--; //decrement the time value
//       if (time < 9) { //if timerContainer is less than 9
//         var addZero = timeCount.textContent;
//         timeCount.textContent = `0${addZero}`; //add a 0 before time value
//       }
//       if (time < 0) { //if timerContainer is less than 0
//         clearInterval(counterBar); //clear counterBar
//         timeText.textContent = "Timer Off"; //change the time text to time off
//         var allOptions = optionAsked.children.length; //getting all option items
//         var correctAnswers = questions[questionCount].answer; //getting correct answer from array
//         for (i = 0; i < allOptions; i++) {
//           if (optionAsked.children[i].textContent == correctAnswers) { //if there is an option which is matched to an array answer
//             optionAsked.children[i].setAttribute("class", "option correct"); //adding green color to matched option
//             optionAsked.children[i].insertAdjacentHTML("beforeend", tickIconTag); //adding tick icon to matched option
//             console.log("Time Off: Auto selected correct answer.");
//           }
//         }
//         for (i = 0; i < allOptions; i++) {
//           optionAsked.children[i].classList.add("disabled"); //once user select an option then disabled all options
//         }
//         nextQuestionBtn.classList.add("show"); //show the next button if user selected any option
//       }
//     }
//   }

//    showQuestionsFunction(questionCount);
//    QuestionCounterFunction(questionNumber);
//    questionTotalCount.innerHTML = `${questionNumber}/${questionsArray.length}`;
//    optionSelected[0].checked = false;
//    optionSelected[1].checked = false;
//    optionSelected[2].checked = false;
//    optionSelected[3].checked = false;
//    optionAsked.innerHTML = `${questions[questionCount].question}`;
//    optionA.innerHTML = `${questions[questionCount].optionA}`;
//    optionB.innerHTML = `${questions[questionCount].optionB}`;
//    optionC.innerHTML = `${questions[questionCount].optionC}`;
//    optionD.innerHTML = `${questions[questionCount].optionD}`;
//    submitAnswerBtn.style.display = "block";
//} else {
//    quizSection.style.display = "none";
//    resultPromptPanel.style.display = "block";

//    clearInterval(counterBar);


//    //calculate user score
//    userScore = userPoints / questions.length;
//    userScore = userScore.toFixed(2);

//    //calculate user rank
//    if (userScore >= 0.90) {
//        userRank = "A";
//    } else if (userScore >= 0.80) {
//        userRank = "B";
//    } else if (userScore >= 0.70) {
//        userRank = "C";
//    } else if (userScore >= 0.60) {
//        userRank = "D";
//    } else {
//        userRank = "E";
//    }

//    //calculate user rank time
//    userRankTime = calculateTime(userTimeResults);

//    //calculate user rank points
//    userRankPoints = userPoints;

//    //calculate user rank name
//    userRankName = userPlayer;

//    //display user rank
//    rankValue.innerHTML = `${userRank}`;
//    rankTime.innerHTML = `${userRankTime}`;
//    rankPoints.innerHTML = `${userRankPoints}`;
//    rankName.innerHTML = `${userRankName}`;

//    //display user score
//    resultPromptPanel.querySelector(".scoreValue").innerHTML = `${userScore}`;

//    //display user rank
//    resultPromptPanel.querySelector(".rankValue").innerHTML = `${userRank}`;

//    //display user rank time
//    resultPromptPanel.querySelector(".rankTime").innerHTML = `${userRankTime}`;

//    //display user rank points
//    resultPromptPanel.querySelector(".rankPoints").innerHTML = `${userRankPoints}`;

//    //display user rank name
//    resultPromptPanel.querySelector(".rankName").innerHTML = `${userRankName}`;

//}

//const showQuestionsFunction = index => {
//  optionAsked.innerHTML = `<p>${questionsArray[index].question}</p>`; //adding question to optionAsked
//  for (let i = 0; i < questionsArray[index].options.length; i++) {
//    optionAsked.innerHTML += `<button class="optionBtn" id="option${i}">${questionsArray[index].options[i]}</button>`; //adding options to optionAsked
//  }
//};


// T-Distribution
var tDistribution = 2.776;

// Run the tests in order
runTest("Max Runs, Simple Test", test1, function(){
  runTest("Max Runs, Moderate Test", test2, function(){
    runTest("Max Runs, Complex Test", test3, function(){
      runTest2("Fixed Runs, Simple Test", test1, 10, function(){
        runTest2("Fixed Runs, Moderate Test", test2, 10, function(){
          runTest2("Fixed Runs, Complex Test", test3, 10);
	});
      });
    }); 
  });
});

// Run the V8-style Max test (but with error determination)
function runTest(name, test, next){
  var runs = [], r = 0;

  setTimeout(function(){
    var start = (new Date).getTime(), diff = 0;

    for ( var n = 0; diff < 1000; n++ ) {
      test();
      diff = (new Date).getTime() - start;
    }

    runs.push( n );

    if ( r++ < 4 )
      setTimeout( arguments.callee, 0 );
    else {
      done(name, runs);
      if ( next )
        setTimeout( next, 0 );
    }
  }, 0);
}

// Run the SunSpider/Dromaeo style of test execution
function runTest2(name, test, num, next){
  var runs = [], r = 0;

  setTimeout(function(){
    var start = (new Date).getTime();
    test();
    runs.push( (new Date).getTime() - start );

    if ( ++r < num )
      setTimeout( arguments.callee, 0 );
    else {
      done(name, runs);
      if ( next )
        setTimeout( next, 0 );
    }
  }, 0);
}

// Calculate all the details from the resulting numbers
function compute(times, runs){
  var num = times.length, results = {runs: num};
 
  times = times.sort(function(a,b){
    return a - b;
  });
 
  // Make Sum
  results.sum = 0;
 
  for ( var i = 0; i < num; i++ )
    results.sum += times[i];
 
  // Make Min
  results.min = times[0];
      
  // Make Max
  results.max = times[ num - 1 ];

  // Make Mean
  results.mean = results.sum / num;

  var log = 0;

  for ( var i = 0; i < num; i++ ) {
    log += Math.log(times[i]);
  }

  results.geometric_mean = Math.pow(Math.E, log / num);
  
  // Make Median
  results.median = num % 2 == 0 ?
    (times[Math.floor(num/2)] + times[Math.ceil(num/2)]) / 2 :
    times[Math.round(num/2)];
  
  // Make Variance
  results.variance = 0;

  for ( var i = 0; i < num; i++ )
    results.variance += Math.pow(times[i] - results.mean, 2);

  results.variance /= num - 1;
      
  // Make Standard Deviation
  results.deviation = Math.sqrt( results.variance );

  // Compute Standard Errors Mean
  results.sem = (results.deviation / Math.sqrt(results.runs)) * tDistribution;

  // Error
  results.error = ((results.sem / results.mean) * 100) || 0;

  return results;
}

function test1(){
  var div = document.createElement("div");

  var span = document.createElement("span");
  span.textContent = "foo bar baz <zoo>";
  div.appendChild(span);

  div.appendChild( document.createTextNode("this is a text node") );

  var a = document.createElement("a");
  a.href = "http://google.com/";
  a.innerHTML = "Some long <b>text</b> thing.";
  div.appendChild( a );
}

function test2(){
  var divs = document.getElementsByTagName("div");
  for ( var d = 0; d < divs.length; d++ ) {}
}

function test3(){
  var divs = document.getElementsByTagName("div");
  for ( var d = 0; d < divs.length; d++ ) {
    divs[d].className = "foo";
  }
}

// Output the results
function done(name, runs){
  var out = document.getElementById("results");
  var results = compute(runs), str = "\n\n" + name + "\n----------------------------\n";

  for ( var i in results ) {
    str += i + ":\t\t" + results[i] + "\n";
  }

  out.innerHTML += str;
}
</script>